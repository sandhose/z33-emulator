on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"

name: Check

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --workspace

  rustfmt:
    name: Format
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install nightly
          rustup default nightly
          rustup component add rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy lints
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install 1.81.0
          rustup default 1.81.0
          rustup component add clippy

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy
        run: cargo clippy --workspace

  deny:
    name: "`cargo deny` audit"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Run cargo deny
        uses: EmbarkStudios/cargo-deny-action@v2

  biome:
    name: "`biome` check"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Run Biome
        run: biome ci
        working-directory: web

  typecheck:
    name: Web app typecheck
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup target add wasm32-unknown-unknown

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2

      - name: Install Node dependencies
        run: pnpm i
        working-directory: web

      - name: Build the app
        run: pnpm run build
        working-directory: web

      - name: Typecheck
        run: pnpm run typecheck
        working-directory: web
