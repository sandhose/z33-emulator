on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"

name: Compile

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-22.04
    env:
      SDKROOT: /opt/MacOSX11.3.sdk

    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup target add ${{ matrix.target }}

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.target }}

      - name: Install zig and cargo-zigbuild
        run: pip3 install ziglang cargo-zigbuild

      - name: Download the macOS SDK
        if: contains(matrix.target, 'darwin')
        run: curl -L "https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz" | tar -J -x -C /opt

      - name: Build the binary
        run: cargo zigbuild --release --target=${{ matrix.target }} -p z33-cli

      - name: Create the archive
        run: tar -czvf z33-cli-${{ matrix.target }}.tar.gz --owner=0 --group=0  -C target/${{ matrix.target }}/release/ z33-cli

      - name: Upload the binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: z33-cli-${{ matrix.target }}.tar.gz


  build-windows:
    name: Build for Windows ${{ matrix.arch }}
    runs-on: ubuntu-22.04
    env:
      XWIN_ARCH: ${{ matrix.arch }}
      XWIN_VARIANT: onecore
      XWIN_CACHE_DIR: ./cargo-xwin

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup target add ${{ matrix.arch }}-pc-windows-msvc

      - name: Setup Rust build cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.arch }}-pc-windows-msvc

      - name: Setup cargo-xwin cache
        uses: actions/cache@v3
        with:
          path: cargo-xwin
          key: cargo-xwin-${{ matrix.arch }}

      - name: Install cargo-xwin
        run: pip3 install cargo-xwin

      - name: Build the binary
        run: cargo xwin build --release --target=${{ matrix.arch }}-pc-windows-msvc -p z33-cli

      - name: Move the binary
        run: mv target/${{ matrix.arch }}-pc-windows-msvc/release/z33-cli.exe ./z33-cli-${{ matrix.arch }}-windows.exe

      - name: Upload the binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-windows
          path: z33-cli-${{ matrix.arch }}-windows.exe


  publish:
    name: Publish a release
    needs: [build, build-windows]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download the artifacts from the previous job
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Move the release assets
        run: |
          mv ./artifacts/{x86_64,aarch64}-{unknown-linux-musl,apple-darwin,windows}/* ./

      - name: Prepare a release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            z33-cli-x86_64-unknown-linux-musl.tar.gz
            z33-cli-aarch64-unknown-linux-musl.tar.gz
            z33-cli-x86_64-apple-darwin.tar.gz
            z33-cli-aarch64-apple-darwin.tar.gz
            z33-cli-x86_64-windows.exe
            z33-cli-aarch64-windows.exe
          draft: true
